# Copyright Jiaqi Liu
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
name: Data Models Acceptance Tests CI/CD

"on":
  pull_request:
  push:
    branches:
      - master
  repository_dispatch:
    types: [jersey-webservice-template-jpa-data-model-changes]

jobs:
  yml-md-style-and-link-checks:
    uses: QubitPi/hashistack/.github/workflows/yml-md-style-and-link-checks.yml@master

  acceptance-tests:
    name: Acceptance tests on data models
    needs: [yml-md-style-and-link-checks]
    outputs:
      outcome: ${{ job.status }}
    continue-on-error: true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup JDK
        uses: QubitPi/hashistack/.github/actions/jdk-setup@master
      - name: Install data-models
        uses: ./.github/actions/configure-data-models
        with:
          model-package-jar-group-id: io.github.qubitpi
          model-package-jar-artifact-id: jersey-webservice-template-jpa-data-models
          model-package-jar-version: 1.0.1
      - name: Spin up Jersey Webservice Template (jpa-elide branch) instance in Docker Compose
        uses: ./.github/actions/docker-compose
        with:
          webservice-repo-clone-url: https://github.com/QubitPi/jersey-webservice-template.git
          repo-branch: jpa-elide
          model-package: io.github.qubitpi.ws.jersey.template.models
      - name: Wait until Docker Compose is up
        uses: iFaxity/wait-on-action@v1
        with:
          resource: http://localhost:8080
      - name: Run acceptance tests
        run: mvn clean verify

  slack-notification:
    name: Send Slack Notification
    if: ${{ always() }}
    needs: acceptance-tests
    uses: QubitPi/hashistack/.github/workflows/slack-notification.yml@master
    with:
      job-status: ${{ needs.acceptance-tests.outputs.outcome }}
    secrets:
      slack-webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
